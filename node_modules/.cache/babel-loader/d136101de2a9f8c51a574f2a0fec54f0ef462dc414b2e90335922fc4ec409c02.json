{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/Primer Parcial/primerparcial/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { SessionsClient } from 'dialogflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const handleUserMessageChange = e => {\n    setUserMessage(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (userMessage.trim() === '') return;\n\n    // const client = new SessionsClient({\n    //   keyFilename: '/path/to/your/credentials.json',\n    // });\n\n    // const sessionPath = client.projectAgentSessionPath(\n    //   'YOUR_PROJECT_ID',\n    //   'YOUR_SESSION_ID'\n    // );\n\n    // const request = {\n    //   session: sessionPath,\n    //   queryInput: {\n    //     text: {\n    //       text: userMessage,\n    //       languageCode: 'es', // Cambia a tu código de idioma si es necesario\n    //     },\n    //   },\n    // };\n\n    try {\n      // const [response] = await client.detectIntent(request);\n\n      // const chatbotMessage = response.queryResult.fulfillmentText;\n\n      // setMessages([\n      //   ...messages,\n      //   { text: userMessage, isUser: true },\n      //   { text: chatbotMessage, isUser: false },\n      // ]);\n\n      setUserMessage('');\n    } catch (error) {\n      console.error('Error al enviar mensaje a Dialogflow:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.isUser ? 'user-message' : 'bot-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Escribe tu mensaje...\",\n        value: userMessage,\n        onChange: handleUserMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"716NyIAy6nXiCVoPtKCIkXYoWPE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","handleUserMessageChange","e","target","value","handleSendMessage","trim","error","console","className","children","map","message","index","isUser","text","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/kali/Desktop/Primer Parcial/primerparcial/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\n// import { SessionsClient } from 'dialogflow';\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n\n  const handleUserMessageChange = (e) => {\n    setUserMessage(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (userMessage.trim() === '') return;\n\n    // const client = new SessionsClient({\n    //   keyFilename: '/path/to/your/credentials.json',\n    // });\n\n    // const sessionPath = client.projectAgentSessionPath(\n    //   'YOUR_PROJECT_ID',\n    //   'YOUR_SESSION_ID'\n    // );\n\n    // const request = {\n    //   session: sessionPath,\n    //   queryInput: {\n    //     text: {\n    //       text: userMessage,\n    //       languageCode: 'es', // Cambia a tu código de idioma si es necesario\n    //     },\n    //   },\n    // };\n\n    try {\n      // const [response] = await client.detectIntent(request);\n\n      // const chatbotMessage = response.queryResult.fulfillmentText;\n\n      // setMessages([\n      //   ...messages,\n      //   { text: userMessage, isUser: true },\n      //   { text: chatbotMessage, isUser: false },\n      // ]);\n\n      setUserMessage('');\n    } catch (error) {\n      console.error('Error al enviar mensaje a Dialogflow:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={message.isUser ? 'user-message' : 'bot-message'}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"user-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Escribe tu mensaje...\"\n          value={userMessage}\n          onChange={handleUserMessageChange}\n        />\n        <button onClick={handleSendMessage}>Enviar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,uBAAuB,GAAIC,CAAC,IAAK;IACrCF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIN,WAAW,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE/B;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAI;MACF;;MAEA;;MAEA;MACA;MACA;MACA;MACA;;MAEAN,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;QAEEe,SAAS,EAAEG,OAAO,CAACE,MAAM,GAAG,cAAc,GAAG,aAAc;QAAAJ,QAAA,EAE1DE,OAAO,CAACG;MAAI,GAHRF,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBhB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,uBAAuB;QACnCjB,KAAK,EAAEL,WAAY;QACnBuB,QAAQ,EAAErB;MAAwB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFzB,OAAA;QAAQ6B,OAAO,EAAElB,iBAAkB;QAAAK,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAtEQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAwEhB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}