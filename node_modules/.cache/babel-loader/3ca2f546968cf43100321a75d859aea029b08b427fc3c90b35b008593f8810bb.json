{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/Primer Parcial/primerparcial/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n//import Chatbot from './components/Chatbot';\nimport { Box, Button, Card, CardContent, Grid, TextField } from \"@mui/material\";\nimport Message from \"./components/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const messagesListRef = React.createRef();\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const sendMessage = content => {\n    setMessages([...messages, {\n      content: content,\n      isCustomer: true\n    }]);\n\n    // TODO: post the request to Back4app\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    sendMessage(messageInput);\n    setMessageInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 420\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          ref: messagesListRef,\n          sx: {\n            height: 420,\n            overflow: \"scroll\",\n            overflowX: \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: 1,\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            mt: 2,\n            display: \"flex\",\n            flexFlow: \"row\",\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            value: messageInput,\n            onChange: event => setMessageInput(event.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmit,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tJ/S5hlyKEMUuwWQK79vGSsM8GE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Button","Card","CardContent","Grid","TextField","Message","jsxDEV","_jsxDEV","App","_s","messagesListRef","React","createRef","messageInput","setMessageInput","useState","messages","setMessages","sendMessage","content","isCustomer","handleSubmit","event","preventDefault","container","direction","justifyContent","alignItems","children","sx","maxWidth","ref","height","overflow","overflowX","m","mr","fileName","_jsxFileName","lineNumber","columnNumber","component","mt","display","flexFlow","gap","variant","size","value","onChange","target","fullWidth","onClick","type","_c","$RefreshReg$"],"sources":["/home/kali/Desktop/Primer Parcial/primerparcial/src/App.js"],"sourcesContent":["import './App.css';\n//import Chatbot from './components/Chatbot';\nimport {Box, Button, Card, CardContent, Grid, TextField} from \"@mui/material\";\nimport Message from \"./components/Message\";\n\nfunction App() {\n\n  const messagesListRef = React.createRef();\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = (content) => {\n    \n    setMessages([\n      ...messages,\n      {\n        content: content,\n        isCustomer: true,\n      }\n    ]);\n\n    // TODO: post the request to Back4app\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    sendMessage(messageInput);\n    setMessageInput(\"\");\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Card sx={{maxWidth: 420}}>\n        <CardContent>\n          <Box\n            ref={messagesListRef}\n            sx={{\n              height: 420,\n              overflow: \"scroll\",\n              overflowX: \"hidden\",\n            }}\n          >\n            <Box sx={{m: 1, mr: 2}}>\n              {/* TODO: messages will be displayed here */}\n            </Box>\n          </Box>\n          <Box\n            component=\"form\"\n            sx={{\n              mt: 2,\n              display: \"flex\",\n              flexFlow: \"row\",\n              gap: 1,\n            }}\n          >\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              value={messageInput}\n              onChange={(event) => setMessageInput(event.target.value)}\n              fullWidth\n            />\n            <Button\n              variant=\"contained\"\n              onClick={handleSubmit}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}